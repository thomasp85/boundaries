% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/densify.R
\name{densify_poly}
\alias{densify_poly}
\title{Increase number of vertices along a boundary}
\usage{
densify_poly(poly, max_dist = NULL, min_cardinality = NULL, n_splits = NULL)
}
\arguments{
\item{poly}{A \code{polyclid_polygon} or \code{polyclid_polyline} vector}

\item{max_dist}{Either \code{NULL} or the maximum distance between consecutive
vertices allowed after the densification}

\item{min_cardinality}{Either \code{NULL} or the lowest number of vertices in the
resulting polygon. If an input polygon has a higher cardinality it is
returned unchanged.}

\item{n_splits}{Either \code{NULL} or the number of new vertices to insert into
every edge.}
}
\value{
A vector of the same type and length as \code{poly}
}
\description{
This function increases the number if vertices in a polygon or polyline by
either adding vertices so that no edge is longer than a certain threshold,
until the cardinality reaches a certain level, or by subdividing edges a
specific number of times. Vertices are always inserted \emph{on} the boundary so
no change in the actual geometry is induced by the operation.
}
\examples{
poly <- polygon(
  c(391, 240, 252, 374, 289, 134, 68, 154, 161, 435, 208, 295, 421, 441),
  c(374, 431, 340, 320, 214, 390, 186, 259, 107, 108, 148, 160, 212, 303)
)
plot(poly)
euclid_plot(vert(poly))

# Add 1 verice to each edges
plot(poly)
euclid_plot(vert(densify_poly(poly, n_splits = 1)))

# Increase cardinality to 40
plot(poly)
euclid_plot(vert(densify_poly(poly, min_cardinality = 40)))

# Make sure edges have at most a length of 100
plot(poly)
euclid_plot(vert(densify_poly(poly, max_dist = 100)))

}
\seealso{
Other boundary resolution: 
\code{\link{simplify_poly}()}
}
\concept{boundary resolution}
