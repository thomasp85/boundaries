[{"path":[]},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement thomasp85@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://boundaries.r-euclid.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://boundaries.r-euclid.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 boundaries authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://boundaries.r-euclid.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Lin Pedersen. Author, maintainer.","code":""},{"path":"https://boundaries.r-euclid.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pedersen T (2023). boundaries: Algorithms Working Modifying Polygon Boundaries. https://github.com/thomasp85/boundaries, https://boundaries.r-euclid.com.","code":"@Manual{,   title = {boundaries: Algorithms for Working With and Modifying Polygon Boundaries},   author = {Thomas Lin Pedersen},   year = {2023},   note = {https://github.com/thomasp85/boundaries, https://boundaries.r-euclid.com}, }"},{"path":"https://boundaries.r-euclid.com/index.html","id":"boundaries-","dir":"","previous_headings":"","what":"boundaries: Tools for working with polyclid polygon boundaries\n","title":"boundaries: Tools for working with polyclid polygon boundaries\n","text":"boundaries utility package euclid ecosystem providing tools working (primarily) polygon boundaries. Offsetting/insetting simplification among primary algorithms provided package, serves place function used somehow alter calculations polygonal rings","code":""},{"path":"https://boundaries.r-euclid.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"boundaries: Tools for working with polyclid polygon boundaries\n","text":"can install development version boundaries like :","code":"pak::pkg_install(\"thomasp85/boundaries\")"},{"path":"https://boundaries.r-euclid.com/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"boundaries: Tools for working with polyclid polygon boundaries\n","text":"show simplify complex polygon, reducing number vertices tenth original count: can seen simplified polygon retains features quite well  Offsetting insetting can calculated either based straight skeleton retains vertex angles, using minkowski sum disc introduces rounding obtuse angles. show insetting offsetting minkowski  functions provided packages. Explore docs learn ","code":"library(boundaries) #> Loading required package: euclid #>  #> Attaching package: 'euclid' #> The following object is masked from 'package:stats': #>  #>     line #> The following object is masked from 'package:base': #>  #>     union denmark <- polyclid::denmark()  sum(cardinality(denmark)) #> [1] 2165 denmark_simple <- simplify_poly(   denmark,    stop = \"below count ratio\",    stop_threshold = 0.1 ) sum(cardinality(denmark_simple)) #> [1] 214 plot(denmark) euclid_plot(denmark_simple, lty = 2, border = \"red\") plot(denmark)  inset <- minkowski_offset(denmark, -0.05, arc_segments = 10) euclid_plot(inset, lty = 2)  offset <- minkowski_offset(denmark, 0.1, arc_segments = 10) euclid_plot(union(offset), border = \"red\")"},{"path":"https://boundaries.r-euclid.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"boundaries: Tools for working with polyclid polygon boundaries\n","text":"Please note boundaries project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://boundaries.r-euclid.com/reference/boundaries-package.html","id":null,"dir":"Reference","previous_headings":"","what":"boundaries: Algorithms for Working With and Modifying Polygon Boundaries — boundaries-package","title":"boundaries: Algorithms for Working With and Modifying Polygon Boundaries — boundaries-package","text":"range algorithms exists primarily modify boundary polygons different ways. important probably offsetting/insetting simplification. 'boundaries' package provide selection algorithms use polygons 'polyclid' package.","code":""},{"path":[]},{"path":"https://boundaries.r-euclid.com/reference/boundaries-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"boundaries: Algorithms for Working With and Modifying Polygon Boundaries — boundaries-package","text":"Maintainer: Thomas Lin Pedersen thomasp85@gmail.com (ORCID)","code":""},{"path":"https://boundaries.r-euclid.com/reference/minkowski_offset.html","id":null,"dir":"Reference","previous_headings":"","what":"Offset polygon using minkowski sum with a disc — minkowski_offset","title":"Offset polygon using minkowski sum with a disc — minkowski_offset","text":"minkowski sum two polygons polygon get trace one polygon around boundary adding covered area boundary. provides offset rounded corners obtuse angles. algorithm provided approximation allowed error bound controlled eps argument. , introduced corner arcs estimations disc converted line segments.","code":""},{"path":"https://boundaries.r-euclid.com/reference/minkowski_offset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Offset polygon using minkowski sum with a disc — minkowski_offset","text":"","code":"minkowski_offset(polygon, offset, arc_segments = 50, eps = 1e-05)"},{"path":"https://boundaries.r-euclid.com/reference/minkowski_offset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Offset polygon using minkowski sum with a disc — minkowski_offset","text":"polygon polyclid_polygon vector. shorter offset recycled length offset offset euclid_exact_numeric numeric vector. shorter polygon recycled length polygon arc_segments number segments used draw full circle eps error bound approximation","code":""},{"path":"https://boundaries.r-euclid.com/reference/minkowski_offset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Offset polygon using minkowski sum with a disc — minkowski_offset","text":"polyclid_polygon_set vector","code":""},{"path":[]},{"path":"https://boundaries.r-euclid.com/reference/minkowski_offset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Offset polygon using minkowski sum with a disc — minkowski_offset","text":"","code":"poly <- polyclid::denmark()  plot(poly, col = \"grey\")  # Negative offset (inset) ins <- minkowski_offset(poly, -0.05, arc_segments = 10) euclid_plot(ins, lty = 2)  # Positive offset off <- minkowski_offset(poly, 0.1, arc_segments = 10) euclid_plot(off, lty = 3)"},{"path":"https://boundaries.r-euclid.com/reference/minkowski_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the minkowski sum of two polygons — minkowski_sum","title":"Calculate the minkowski sum of two polygons — minkowski_sum","text":"minkowski sum point-wise sum two polygons. Practically means trace one polygon around boundary , expanding polygon covered area.","code":""},{"path":"https://boundaries.r-euclid.com/reference/minkowski_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the minkowski sum of two polygons — minkowski_sum","text":"","code":"minkowski_sum(P, Q)"},{"path":"https://boundaries.r-euclid.com/reference/minkowski_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the minkowski sum of two polygons — minkowski_sum","text":"P polyclid_polygon vector expanded Q polyclid_polygon vector trace around P","code":""},{"path":"https://boundaries.r-euclid.com/reference/minkowski_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the minkowski sum of two polygons — minkowski_sum","text":"polyclid_polygon vector","code":""},{"path":[]},{"path":"https://boundaries.r-euclid.com/reference/minkowski_sum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the minkowski sum of two polygons — minkowski_sum","text":"","code":"poly <- polyclid::denmark()  # Expand Jutland by tracing the Island of Bornhold around it  # First we should center Bornholm on the origin. bornholm <- transform(poly[7], affine_translate(-vec(centroid(poly[7])))) plot(minkowski_sum(poly[1], bornholm))"},{"path":"https://boundaries.r-euclid.com/reference/simplify_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify polygons and polylines — simplify_poly","title":"Simplify polygons and polylines — simplify_poly","text":"function allows reduce number vertices used encode geometry attempting keep geometry close original possible. can choose different cost functions stop conditions order fine tune procedure.","code":""},{"path":"https://boundaries.r-euclid.com/reference/simplify_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify polygons and polylines — simplify_poly","text":"","code":"simplify_poly(   poly,   cost = \"squared\",   stop = \"below count ratio\",   cost_ratio = 0.5,   stop_threshold = 0.5 )"},{"path":"https://boundaries.r-euclid.com/reference/simplify_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify polygons and polylines — simplify_poly","text":"poly polyclid_polygon polyclid_polyline cost cost function use. See details. stop stop condition use terminating simplification. See details. cost_ratio ratio use cost = \"hybrid squared stop_threshold threshold use stop condition","code":""},{"path":"https://boundaries.r-euclid.com/reference/simplify_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify polygons and polylines — simplify_poly","text":"vector type poly","code":""},{"path":"https://boundaries.r-euclid.com/reference/simplify_poly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify polygons and polylines — simplify_poly","text":"","code":"poly <- polyclid::denmark()  plot(poly)  poly_s <- simplify_poly(poly)  # Number of original vertices sum(cardinality(poly)) #> [1] 2165  # Number after simplification sum(cardinality(poly_s)) #> [1] 1079  # Close to same visual plot(poly_s)   # Plot Jutland using only 20 vertices plot(simplify_poly(poly[1], stop = \"below count\", stop_threshold = 20)) euclid_plot(poly[1], lty = 2, border = \"red\")"},{"path":"https://boundaries.r-euclid.com/reference/skeleton_interior.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the interior straight skeleton — skeleton_interior","title":"Calculate the interior straight skeleton — skeleton_interior","text":"straight skeletons mostly used offsetting, can also useful, e.g. finding central spine polygon. boundaries package provide class representing straight skeleton (ie. internal CGAL representation), can get representation polyline_set.","code":""},{"path":"https://boundaries.r-euclid.com/reference/skeleton_interior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the interior straight skeleton — skeleton_interior","text":"","code":"skeleton_interior(polygon, keep_boundary = FALSE, only_inner = FALSE)"},{"path":"https://boundaries.r-euclid.com/reference/skeleton_interior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the interior straight skeleton — skeleton_interior","text":"polygon polyclid_polygon vector keep_boundary boundary (ie. input polygon) returned part skeleton. useful mainly interested using straight skeleton partitioning polygon based skeleton only_inner returned skeleton contain inner bisectors skeleton (ie parts connected vertices input polygon). effectively returns spine polygon","code":""},{"path":"https://boundaries.r-euclid.com/reference/skeleton_interior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the interior straight skeleton — skeleton_interior","text":"polyclid_polyline_set vector","code":""},{"path":[]},{"path":"https://boundaries.r-euclid.com/reference/skeleton_interior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the interior straight skeleton — skeleton_interior","text":"","code":"poly <- polyclid::denmark()[9] plot(poly)   # Only return the bisectors plot(skeleton_interior(poly))   # Only return the inner bisectors plot(skeleton_interior(poly, only_inner = TRUE))   # Return both the skeleton and boundary plot(skeleton_interior(poly, keep_boundary = TRUE))"},{"path":"https://boundaries.r-euclid.com/reference/skeleton_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Limit of straight skeletons — skeleton_limit","title":"Limit of straight skeletons — skeleton_limit","text":"limit straight skeleton distance inner offset disappears completely. can get geometry left limit polyline set consisting isolated vertices /segments.","code":""},{"path":"https://boundaries.r-euclid.com/reference/skeleton_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit of straight skeletons — skeleton_limit","text":"","code":"skeleton_limit(polygon)  skeleton_limit_location(polygon)"},{"path":"https://boundaries.r-euclid.com/reference/skeleton_limit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limit of straight skeletons — skeleton_limit","text":"polygon polyclid_polygon vector","code":""},{"path":"https://boundaries.r-euclid.com/reference/skeleton_limit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Limit of straight skeletons — skeleton_limit","text":"skeleton_limit returns euclid_exact_numeric vector skeleton_limit_location returns polyclid_polyline_set vector","code":""},{"path":[]},{"path":"https://boundaries.r-euclid.com/reference/skeleton_limit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limit of straight skeletons — skeleton_limit","text":"","code":"poly <- polyclid::denmark()[9] # Complex polygons will often have a single limit point  plot(poly) euclid_plot(vert(skeleton_limit_location(poly)))  # But certain geometries will result in segments rather than lines poly <- polyclid::polygon(   c(1, 1, 2, 2, -2, -2, -1, -1),   c(-2, 0, 0, 2, 2, 0, 0, -2) ) euclid_plot(skeleton_limit_location(poly))   # You can get the distance from the limit location to the boundary skeleton_limit(poly) #> <exact numerics [1]> #> [1] 1"},{"path":"https://boundaries.r-euclid.com/reference/skeleton_offset.html","id":null,"dir":"Reference","previous_headings":"","what":"Offset a polygon based on it's straight skeleton — skeleton_offset","title":"Offset a polygon based on it's straight skeleton — skeleton_offset","text":"straight skeleton structure made angular bisectors vertex polygon (see skeleton_interior() get skeleton). can used offset polygons either inward outward. offsetting technique keep corners polygon -.","code":""},{"path":"https://boundaries.r-euclid.com/reference/skeleton_offset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Offset a polygon based on it's straight skeleton — skeleton_offset","text":"","code":"skeleton_offset(polygon, offset)"},{"path":"https://boundaries.r-euclid.com/reference/skeleton_offset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Offset a polygon based on it's straight skeleton — skeleton_offset","text":"polygon polyclid_polygon vector. shorter offset recycled length offset offset euclid_exact_numeric numeric vector. shorter polygon recycled length polygon","code":""},{"path":"https://boundaries.r-euclid.com/reference/skeleton_offset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Offset a polygon based on it's straight skeleton — skeleton_offset","text":"polyclid_polygon_set vector","code":""},{"path":[]},{"path":"https://boundaries.r-euclid.com/reference/skeleton_offset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Offset a polygon based on it's straight skeleton — skeleton_offset","text":"","code":"poly <- polyclid::denmark()  plot(poly, col = \"grey\")  # Negative offset (inset) ins <- skeleton_offset(poly, -0.05) euclid_plot(ins, lty = 2)  # Positive offset off <- skeleton_offset(poly, 0.1) euclid_plot(off, lty = 3)   # As can be seen, small sharp angles can become severely exaggerated with # this offset type plot(skeleton_offset(poly[9], c(0.01, 0.02, 0.04, 0.06, 0.1)))"}]
